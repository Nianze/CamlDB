### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: repl.mli.depends, tags: { extension:mli, file:repl.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules repl.mli > repl.mli.depends # cached
# Target: repl.cmi, tags: { byte, compile, extension:mli, file:repl.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o repl.cmi repl.mli # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o main.cmo main.ml # cached
# Target: repl.ml.depends, tags: { extension:ml, file:repl.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules repl.ml > repl.ml.depends # cached
# Target: interp.mli.depends, tags: { extension:mli, file:interp.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules interp.mli > interp.mli.depends # cached
# Target: ast.mli.depends, tags: { extension:mli, file:ast.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules ast.mli > ast.mli.depends # cached
# Target: table.mli.depends, tags: { extension:mli, file:table.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules table.mli > table.mli.depends # cached
# Target: table.cmi, tags: { byte, compile, extension:mli, file:table.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o table.cmi table.mli # cached
# Target: visualizer.mli.depends, tags: { extension:mli, file:visualizer.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules visualizer.mli > visualizer.mli.depends # cached
# Target: visualizer.cmi, tags: { byte, compile, extension:mli, file:visualizer.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o visualizer.cmi visualizer.mli # cached
# Target: ast.cmi, tags: { byte, compile, extension:mli, file:ast.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o ast.cmi ast.mli # cached
# Target: interp.cmi, tags: { byte, compile, extension:mli, file:interp.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o interp.cmi interp.mli # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly.depends, tags: { extension:mly, file:parser.mly, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --raw-depend --ocamldep '/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules' parser.mly > parser.mly.depends # cached
# Target: parser.mly, tags: { byte, compile, extension:mly, file:parser.mly, menhir, ocaml, parser, quiet }
menhir --ocamlc '/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf' --infer parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o lexer.cmo lexer.ml # cached
# Target: repl.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:repl.cmo, file:repl.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o repl.cmo repl.ml # cached
# Target: interp.ml.depends, tags: { extension:ml, file:interp.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules interp.ml > interp.ml.depends
# Target: data_processor.mli.depends, tags: { extension:mli, file:data_processor.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules data_processor.mli > data_processor.mli.depends # cached
# Target: data_processor.cmi, tags: { byte, compile, extension:mli, file:data_processor.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o data_processor.cmi data_processor.mli # cached
# Target: storage.mli.depends, tags: { extension:mli, file:storage.mli, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules storage.mli > storage.mli.depends # cached
# Target: storage.cmi, tags: { byte, compile, extension:mli, file:storage.mli, interf, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o storage.cmi storage.mli # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules parser.ml > parser.ml.depends # cached
# Target: interp.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:interp.cmo, file:interp.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o interp.cmo interp.ml
# Target: parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o parser.cmo parser.ml
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules ast.ml > ast.ml.depends # cached
# Target: data_processor.ml.depends, tags: { extension:ml, file:data_processor.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules data_processor.ml > data_processor.ml.depends
# Target: storage.ml.depends, tags: { extension:ml, file:storage.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules storage.ml > storage.ml.depends # cached
# Target: table.ml.depends, tags: { extension:ml, file:table.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules table.ml > table.ml.depends
# Target: visualizer.ml.depends, tags: { extension:ml, file:visualizer.ml, ocaml, ocamldep, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamldep.opt -modules visualizer.ml > visualizer.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o ast.cmo ast.ml
# Target: data_processor.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:data_processor.cmo, file:data_processor.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o data_processor.cmo data_processor.ml
# Target: storage.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:storage.cmo, file:storage.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o storage.cmo storage.ml
# Target: table.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:table.cmo, file:table.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o table.cmo table.ml
# Target: visualizer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:visualizer.cmo, file:visualizer.ml, implem, ocaml, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -c -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf -o visualizer.cmo visualizer.ml
# Target: main.byte, tags: { byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet }
/Users/andrew/.opam/4.02.1/bin/ocamlc.opt -I /Users/andrew/.opam/4.02.1/lib/jsonm -I /Users/andrew/.opam/4.02.1/lib/uutf uutf.cma jsonm.cma table.cmo data_processor.cmo visualizer.cmo ast.cmo storage.cmo interp.cmo parser.cmo lexer.cmo repl.cmo main.cmo -o main.byte
# Compilation successful.
